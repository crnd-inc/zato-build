[supervisord]
nodaemon = true
logfile = /opt/zato/supervisord.log
loglevel = debug
user = root
directory = /opt/zato

[inet_http_server]
port = 127.0.0.1:9001

[supervisorctl]
serverurl = http://localhost:9001
prompt = mysupervisor

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[eventlistener:dependentstartup]
command=/opt/zato/current/bin/python -m supervisord_dependent_startup
autostart=true
autorestart=unexpected
startretries=0
exitcodes=0,3
events=PROCESS_STATE

[program:ssh]
command = /usr/sbin/sshd -D
user = root
numprocs=1

{{ if or ( empty .Env.REDIS_HOSTNAME ) ( eq .Env.REDIS_HOSTNAME "localhost" ) }}
[program:redis]
process_name = redis
command = redis-server
user = zato
autostart=false
autorestart = false
numprocs=1
dependent_startup=true
{{ end }}

{{ if or ( empty .Env.ODB_HOSTNAME ) ( eq .Env.ODB_HOSTNAME "localhost" ) }}
[program:postgresql]
command=postgres
user=postgres
environment=PGDATA="{{ .Env.PGDATA }}"
autostart=false
autorestart=true
stderr_logfile=/var/log/postgresql/main.log
numprocs=1
dependent_startup=true
{{ end }}

[program:zato-load-balancer]
command = /opt/zato/zato_start_load_balancer
user = zato
autostart=false
autorestart = unexpected
stopasgroup = true
killasgroup = true
numprocs=1
dependent_startup=true

[program:zatoserver1]
command = /opt/zato/zato_start_server1
user = zato
autostart=false
autorestart = unexpected
stopasgroup = true
killasgroup = true
numprocs=1
dependent_startup=true

[program:zatoserver2]
command = /opt/zato/zato_start_server2
user = zato
autostart=false
autorestart = unexpected
stopasgroup = true
killasgroup = true
numprocs=1
dependent_startup=true
dependent_startup_wait_for=zatoserver1:running

[program:zatowebadmin]
command = /opt/zato/zato_start_web_admin
user = zato
autostart=false
autorestart = unexpected
stopasgroup = true
killasgroup = true
numprocs=1
dependent_startup=true
dependent_startup_wait_for=zatoserver1:running

[program:zatoscheduler]
command = /opt/zato/zato_start_scheduler
user = zato
autostart=false
autorestart = unexpected
stopasgroup = true
killasgroup = true
numprocs=1
dependent_startup=true
dependent_startup_wait_for=zatoserver1:running

[program:hotdeploy]
command=/opt/zato/hotdeploy-utility.sh
directory=/opt/zato/
autostart=false
autorestart = false
stopasgroup = true
killasgroup = true
numprocs=1
dependent_startup=true
dependent_startup_wait_for=zatoserver1:running

{{ if .Env.ZATO_ENMASSE_FILE }}
[program:enmasse]
command=/opt/zato/enmasse-utility.sh
directory=/opt/zato/
user=zato
autostart=false
autorestart = false
stopasgroup = true
killasgroup = true
numprocs=1
dependent_startup=true
; only after hotdeploy exited
dependent_startup_wait_for=hotdeploy:exited zatoserver1:running
{{ end }}

{{ if .Env.ZATO_IDE_PUBLISHER_PASSWORD }}
[program:idepasswordupdate]
command=/opt/zato/ide_password_update.sh
directory=/opt/zato/
user=zato
autostart=false
autorestart = unexpected
stopasgroup = true
killasgroup = true
numprocs=1
dependent_startup=true
dependent_startup_wait_for=zatoserver1:running
{{ end }}
